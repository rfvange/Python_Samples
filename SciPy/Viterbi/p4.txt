% ---------------------
% * Plotting Commands *
% ---------------------
% - Start -

figure(1)
semilogy (EBp,BER, 'k-'. Eb_No, avg_ber, 'r^-', 'Linewidth', 2)
title ('Plot of BER vs. Eb/No')
xlabel('Eb / No')
ylabel('Bit Eiror Rate (BER)')
legend('Uncoded BPSK','code rate = 1/2 or 1/3, m = 2 or 6, hard or soft decision
        (standard or tested)')
axis ([0 max(Ebn_db) 1E-6 1])
grid

% - End -


- hard_decision_Viterbi.m

%********************************************************************
% * Hard - Decision Viterbi Decoder with Convolutional Encoding     *
% *------------------------------------------------------------     *
%********************************************************************


 % noise level

clear all
clc
close all
iterat = 3; %number of trials


N= 10000  %number of input bits
Eb_No = [2:1:7];
LE = length(Eb_No);

for kk = 1,iterat
 kk

d0 = rand(1,N);        % Generation of random input bits of length N used for testing the
                       % FEC technique practically
d0(find(d0>=0.5)) = 1;
d0(find(d0<0.5)) = 0;   % Conversion to orthogonal signal elements d0;

%****************************************************************************
% Standard generator polynomials for which the FEC technique is implemented *
%****************************************************************************
